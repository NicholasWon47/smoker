#!/bin/sh
# Copyright (C) 2007-2013, GoodData(R) Corporation. All rights reserved
#
# GoodData Smoke testing daemon
#
# chkconfig:   - 70 30
#
# description: GoodData Smoke testing daemon

# Source function library.
[ -f /etc/rc.d/init.d/functions ] && . /etc/rc.d/init.d/functions

# Source LSB function library.
. /lib/lsb/init-functions

PROG='smokerd'
BINARY='/usr/bin/smokerd.py'
PIDFILE='/var/run/smokerd.pid'
LOCKFILE='/var/lock/subsys/smokerd'
CONFDIR='/etc/smokerd'
CONFIG="${CONFIGDIR}/smokerd.yaml"
GENCONFIG=0
SMOKERD_OPTIONS="-p ${PIDFILE} -v -c ${CONFIG}"

# Overwrite options
[ -f /etc/default/smokerd ] && . /etc/default/smokerd

exit_error() {
	failure
	exit 1
}

confgen() {
	if [ $GENCONFIG -ne 1 ]; then
		return 0
	fi

	cat $CONFDIR/common.yaml > $CONFIG || exit_error

	dirs=('template' 'action' 'plugin')
	for dir in ${dirs[*]}; do
		echo -e "\n${dir}s:" >> $CONFIG

		# Skip if directory doesn't contain YAML files
		if [ `ls ${CONFDIR}/${dir}.d/*.yaml 2>/dev/null|wc -l` -eq 0 ]; then
			continue
		fi

		for plugin in ${CONFDIR}/${dir}.d/*.yaml; do
			name=`basename $plugin .yaml`

			echo "    ${name}: !include ${dir}.d/${name}.yaml" >> $CONFIG
		done
	done
}

start() {
	[ -x $BINARY ] || exit 5

	umask 077

	echo -n $"Starting smokerd: "
	if [ -f $PIDFILE ]; then
		# PID file already exists!
		failure
		echo
		return 1
	fi

	confgen
	$BINARY $SMOKERD_OPTIONS
	RETVAL=$?
	if [ $RETVAL -eq 0 ]; then
		sleep 1
		if [ `pgrep -f $BINARY` ]; then
			success
			touch $LOCKFILE
		else
			failure
		fi
	else
		failure
	fi
	echo
	return $RETVAL
}
stop() {
	echo -n $"Shutting down smokerd: "
	if [ ! -f $PIDFILE ]; then
		# PID file doesn't exist!
		failure
		echo
		return 1
	fi

	kill $(cat $PIDFILE)
	RETVAL=$?
	if [ $RETVAL -eq 0 ]; then
		# Wait 120 seconds for smokerd to shutdown, then throw failure
		time=0
		while [ $time -lt 120 ]; do
			ps aux|grep `cat $PIDFILE 2>/dev/null || echo chuja12345`|grep -v grep 2>&1 >/dev/null || break
			sleep 1
			time=$[ $time + 1 ]
		done

		# Check if smokerd is still running
		ps aux|grep `cat $PIDFILE 2>/dev/null || echo chuja12345`|grep -v grep 2>&1 >/dev/null
		RETVAL=$?
		if [ $RETVAL -eq 0 ]; then
			failure
			RETVAL=1
		else
			success
			rm -f $LOCKFILE
			RETVAL=0
		fi
	else
		failure
	fi
	echo
	return $RETVAL
}
rhstatus() {
	status -p "$PIDFILE" -l $PROG $BINARY
}
restart() {
	stop
	start
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart)
	restart
	;;
  reload)
	exit 3
	;;
  force-reload)
	restart
	;;
  status)
	rhstatus
	;;
  condrestart|try-restart)
	rhstatus >/dev/null 2>&1 || exit 0
	restart
	;;
  *)
	echo $"Usage: $0 {start|stop|restart|condrestart|try-restart|reload|force-reload|status}"
	exit 3
esac

exit $?
